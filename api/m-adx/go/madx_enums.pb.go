// Code generated by protoc-gen-go. DO NOT EDIT.
// source: madx_enums.proto

package openrtb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AuctionType int32

const (
	AuctionType_FIRST_PRICE  AuctionType = 1
	AuctionType_SECOND_PRICE AuctionType = 2
	AuctionType_FIXED_PRICE  AuctionType = 3
)

var AuctionType_name = map[int32]string{
	1: "FIRST_PRICE",
	2: "SECOND_PRICE",
	3: "FIXED_PRICE",
}
var AuctionType_value = map[string]int32{
	"FIRST_PRICE":  1,
	"SECOND_PRICE": 2,
	"FIXED_PRICE":  3,
}

func (x AuctionType) Enum() *AuctionType {
	p := new(AuctionType)
	*p = x
	return p
}
func (x AuctionType) String() string {
	return proto.EnumName(AuctionType_name, int32(x))
}
func (x *AuctionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AuctionType_value, data, "AuctionType")
	if err != nil {
		return err
	}
	*x = AuctionType(value)
	return nil
}
func (AuctionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{0}
}

type BannerAdType int32

const (
	BannerAdType_XHTML_TEXT_AD   BannerAdType = 1
	BannerAdType_XHTML_BANNER_AD BannerAdType = 2
	BannerAdType_JAVASCRIPT_AD   BannerAdType = 3
	BannerAdType_IFRAME          BannerAdType = 4
)

var BannerAdType_name = map[int32]string{
	1: "XHTML_TEXT_AD",
	2: "XHTML_BANNER_AD",
	3: "JAVASCRIPT_AD",
	4: "IFRAME",
}
var BannerAdType_value = map[string]int32{
	"XHTML_TEXT_AD":   1,
	"XHTML_BANNER_AD": 2,
	"JAVASCRIPT_AD":   3,
	"IFRAME":          4,
}

func (x BannerAdType) Enum() *BannerAdType {
	p := new(BannerAdType)
	*p = x
	return p
}
func (x BannerAdType) String() string {
	return proto.EnumName(BannerAdType_name, int32(x))
}
func (x *BannerAdType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BannerAdType_value, data, "BannerAdType")
	if err != nil {
		return err
	}
	*x = BannerAdType(value)
	return nil
}
func (BannerAdType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{1}
}

type CreativeAttribute int32

const (
	CreativeAttribute_AUDIO_AUTO_PLAY                CreativeAttribute = 1
	CreativeAttribute_AUDIO_USER_INITIATED           CreativeAttribute = 2
	CreativeAttribute_EXPANDABLE_AUTOMATIC           CreativeAttribute = 3
	CreativeAttribute_EXPANDABLE_CLICK_INITIATED     CreativeAttribute = 4
	CreativeAttribute_EXPANDABLE_ROLLOVER_INITIATED  CreativeAttribute = 5
	CreativeAttribute_VIDEO_IN_BANNER_AUTO_PLAY      CreativeAttribute = 6
	CreativeAttribute_VIDEO_IN_BANNER_USER_INITIATED CreativeAttribute = 7
	CreativeAttribute_POP                            CreativeAttribute = 8
	CreativeAttribute_PROVOCATIVE_OR_SUGGESTIVE      CreativeAttribute = 9
	CreativeAttribute_ANNOYING                       CreativeAttribute = 10
	CreativeAttribute_SURVEYS                        CreativeAttribute = 11
	CreativeAttribute_TEXT_ONLY                      CreativeAttribute = 12
	CreativeAttribute_USER_INTERACTIVE               CreativeAttribute = 13
	CreativeAttribute_WINDOWS_DIALOG_OR_ALERT_STYLE  CreativeAttribute = 14
	CreativeAttribute_HAS_AUDIO_ON_OFF_BUTTON        CreativeAttribute = 15
	CreativeAttribute_AD_CAN_BE_SKIPPED              CreativeAttribute = 16
	CreativeAttribute_FLASH                          CreativeAttribute = 17
)

var CreativeAttribute_name = map[int32]string{
	1:  "AUDIO_AUTO_PLAY",
	2:  "AUDIO_USER_INITIATED",
	3:  "EXPANDABLE_AUTOMATIC",
	4:  "EXPANDABLE_CLICK_INITIATED",
	5:  "EXPANDABLE_ROLLOVER_INITIATED",
	6:  "VIDEO_IN_BANNER_AUTO_PLAY",
	7:  "VIDEO_IN_BANNER_USER_INITIATED",
	8:  "POP",
	9:  "PROVOCATIVE_OR_SUGGESTIVE",
	10: "ANNOYING",
	11: "SURVEYS",
	12: "TEXT_ONLY",
	13: "USER_INTERACTIVE",
	14: "WINDOWS_DIALOG_OR_ALERT_STYLE",
	15: "HAS_AUDIO_ON_OFF_BUTTON",
	16: "AD_CAN_BE_SKIPPED",
	17: "FLASH",
}
var CreativeAttribute_value = map[string]int32{
	"AUDIO_AUTO_PLAY":                1,
	"AUDIO_USER_INITIATED":           2,
	"EXPANDABLE_AUTOMATIC":           3,
	"EXPANDABLE_CLICK_INITIATED":     4,
	"EXPANDABLE_ROLLOVER_INITIATED":  5,
	"VIDEO_IN_BANNER_AUTO_PLAY":      6,
	"VIDEO_IN_BANNER_USER_INITIATED": 7,
	"POP":                            8,
	"PROVOCATIVE_OR_SUGGESTIVE":      9,
	"ANNOYING":                       10,
	"SURVEYS":                        11,
	"TEXT_ONLY":                      12,
	"USER_INTERACTIVE":               13,
	"WINDOWS_DIALOG_OR_ALERT_STYLE":  14,
	"HAS_AUDIO_ON_OFF_BUTTON":        15,
	"AD_CAN_BE_SKIPPED":              16,
	"FLASH":                          17,
}

func (x CreativeAttribute) Enum() *CreativeAttribute {
	p := new(CreativeAttribute)
	*p = x
	return p
}
func (x CreativeAttribute) String() string {
	return proto.EnumName(CreativeAttribute_name, int32(x))
}
func (x *CreativeAttribute) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CreativeAttribute_value, data, "CreativeAttribute")
	if err != nil {
		return err
	}
	*x = CreativeAttribute(value)
	return nil
}
func (CreativeAttribute) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{2}
}

type APIFramework int32

const (
	APIFramework_VPAID_1 APIFramework = 1
	APIFramework_VPAID_2 APIFramework = 2
	APIFramework_MRAID_1 APIFramework = 3
	APIFramework_ORMMA   APIFramework = 4
	APIFramework_MRAID_2 APIFramework = 5
	APIFramework_MRAID_3 APIFramework = 6
	APIFramework_OMID_1  APIFramework = 7
)

var APIFramework_name = map[int32]string{
	1: "VPAID_1",
	2: "VPAID_2",
	3: "MRAID_1",
	4: "ORMMA",
	5: "MRAID_2",
	6: "MRAID_3",
	7: "OMID_1",
}
var APIFramework_value = map[string]int32{
	"VPAID_1": 1,
	"VPAID_2": 2,
	"MRAID_1": 3,
	"ORMMA":   4,
	"MRAID_2": 5,
	"MRAID_3": 6,
	"OMID_1":  7,
}

func (x APIFramework) Enum() *APIFramework {
	p := new(APIFramework)
	*p = x
	return p
}
func (x APIFramework) String() string {
	return proto.EnumName(APIFramework_name, int32(x))
}
func (x *APIFramework) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(APIFramework_value, data, "APIFramework")
	if err != nil {
		return err
	}
	*x = APIFramework(value)
	return nil
}
func (APIFramework) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{3}
}

type AdPosition int32

const (
	AdPosition_UNKNOWN                          AdPosition = 0
	AdPosition_ABOVE_THE_FOLD                   AdPosition = 1
	AdPosition_DEPRECATED_LIKELY_BELOW_THE_FOLD AdPosition = 2
	AdPosition_BELOW_THE_FOLD                   AdPosition = 3
	AdPosition_HEADER                           AdPosition = 4
	AdPosition_FOOTER                           AdPosition = 5
	AdPosition_SIDEBAR                          AdPosition = 6
	AdPosition_AD_POSITION_FULLSCREEN           AdPosition = 7
)

var AdPosition_name = map[int32]string{
	0: "UNKNOWN",
	1: "ABOVE_THE_FOLD",
	2: "DEPRECATED_LIKELY_BELOW_THE_FOLD",
	3: "BELOW_THE_FOLD",
	4: "HEADER",
	5: "FOOTER",
	6: "SIDEBAR",
	7: "AD_POSITION_FULLSCREEN",
}
var AdPosition_value = map[string]int32{
	"UNKNOWN":                          0,
	"ABOVE_THE_FOLD":                   1,
	"DEPRECATED_LIKELY_BELOW_THE_FOLD": 2,
	"BELOW_THE_FOLD":                   3,
	"HEADER":                           4,
	"FOOTER":                           5,
	"SIDEBAR":                          6,
	"AD_POSITION_FULLSCREEN":           7,
}

func (x AdPosition) Enum() *AdPosition {
	p := new(AdPosition)
	*p = x
	return p
}
func (x AdPosition) String() string {
	return proto.EnumName(AdPosition_name, int32(x))
}
func (x *AdPosition) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdPosition_value, data, "AdPosition")
	if err != nil {
		return err
	}
	*x = AdPosition(value)
	return nil
}
func (AdPosition) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{4}
}

type VideoLinearity int32

const (
	VideoLinearity_LINEAR     VideoLinearity = 1
	VideoLinearity_NON_LINEAR VideoLinearity = 2
)

var VideoLinearity_name = map[int32]string{
	1: "LINEAR",
	2: "NON_LINEAR",
}
var VideoLinearity_value = map[string]int32{
	"LINEAR":     1,
	"NON_LINEAR": 2,
}

func (x VideoLinearity) Enum() *VideoLinearity {
	p := new(VideoLinearity)
	*p = x
	return p
}
func (x VideoLinearity) String() string {
	return proto.EnumName(VideoLinearity_name, int32(x))
}
func (x *VideoLinearity) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VideoLinearity_value, data, "VideoLinearity")
	if err != nil {
		return err
	}
	*x = VideoLinearity(value)
	return nil
}
func (VideoLinearity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{5}
}

type Protocol int32

const (
	Protocol_VAST_1_0          Protocol = 1
	Protocol_VAST_2_0          Protocol = 2
	Protocol_VAST_3_0          Protocol = 3
	Protocol_VAST_1_0_WRAPPER  Protocol = 4
	Protocol_VAST_2_0_WRAPPER  Protocol = 5
	Protocol_VAST_3_0_WRAPPER  Protocol = 6
	Protocol_VAST_4_0          Protocol = 7
	Protocol_VAST_4_0_WRAPPER  Protocol = 8
	Protocol_DAAST_1_0         Protocol = 9
	Protocol_DAAST_1_0_WRAPPER Protocol = 10
)

var Protocol_name = map[int32]string{
	1:  "VAST_1_0",
	2:  "VAST_2_0",
	3:  "VAST_3_0",
	4:  "VAST_1_0_WRAPPER",
	5:  "VAST_2_0_WRAPPER",
	6:  "VAST_3_0_WRAPPER",
	7:  "VAST_4_0",
	8:  "VAST_4_0_WRAPPER",
	9:  "DAAST_1_0",
	10: "DAAST_1_0_WRAPPER",
}
var Protocol_value = map[string]int32{
	"VAST_1_0":          1,
	"VAST_2_0":          2,
	"VAST_3_0":          3,
	"VAST_1_0_WRAPPER":  4,
	"VAST_2_0_WRAPPER":  5,
	"VAST_3_0_WRAPPER":  6,
	"VAST_4_0":          7,
	"VAST_4_0_WRAPPER":  8,
	"DAAST_1_0":         9,
	"DAAST_1_0_WRAPPER": 10,
}

func (x Protocol) Enum() *Protocol {
	p := new(Protocol)
	*p = x
	return p
}
func (x Protocol) String() string {
	return proto.EnumName(Protocol_name, int32(x))
}
func (x *Protocol) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Protocol_value, data, "Protocol")
	if err != nil {
		return err
	}
	*x = Protocol(value)
	return nil
}
func (Protocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{6}
}

type PlaybackMethod int32

const (
	PlaybackMethod_AUTO_PLAY_SOUND_ON  PlaybackMethod = 1
	PlaybackMethod_AUTO_PLAY_SOUND_OFF PlaybackMethod = 2
	PlaybackMethod_CLICK_TO_PLAY       PlaybackMethod = 3
	PlaybackMethod_MOUSE_OVER          PlaybackMethod = 4
	PlaybackMethod_ENTER_SOUND_ON      PlaybackMethod = 5
	PlaybackMethod_ENTER_SOUND_OFF     PlaybackMethod = 6
)

var PlaybackMethod_name = map[int32]string{
	1: "AUTO_PLAY_SOUND_ON",
	2: "AUTO_PLAY_SOUND_OFF",
	3: "CLICK_TO_PLAY",
	4: "MOUSE_OVER",
	5: "ENTER_SOUND_ON",
	6: "ENTER_SOUND_OFF",
}
var PlaybackMethod_value = map[string]int32{
	"AUTO_PLAY_SOUND_ON":  1,
	"AUTO_PLAY_SOUND_OFF": 2,
	"CLICK_TO_PLAY":       3,
	"MOUSE_OVER":          4,
	"ENTER_SOUND_ON":      5,
	"ENTER_SOUND_OFF":     6,
}

func (x PlaybackMethod) Enum() *PlaybackMethod {
	p := new(PlaybackMethod)
	*p = x
	return p
}
func (x PlaybackMethod) String() string {
	return proto.EnumName(PlaybackMethod_name, int32(x))
}
func (x *PlaybackMethod) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlaybackMethod_value, data, "PlaybackMethod")
	if err != nil {
		return err
	}
	*x = PlaybackMethod(value)
	return nil
}
func (PlaybackMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{7}
}

type StartDelay int32

const (
	StartDelay_PRE_ROLL          StartDelay = 0
	StartDelay_GENERIC_MID_ROLL  StartDelay = -1
	StartDelay_GENERIC_POST_ROLL StartDelay = -2
)

var StartDelay_name = map[int32]string{
	0:  "PRE_ROLL",
	-1: "GENERIC_MID_ROLL",
	-2: "GENERIC_POST_ROLL",
}
var StartDelay_value = map[string]int32{
	"PRE_ROLL":          0,
	"GENERIC_MID_ROLL":  -1,
	"GENERIC_POST_ROLL": -2,
}

func (x StartDelay) Enum() *StartDelay {
	p := new(StartDelay)
	*p = x
	return p
}
func (x StartDelay) String() string {
	return proto.EnumName(StartDelay_name, int32(x))
}
func (x *StartDelay) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(StartDelay_value, data, "StartDelay")
	if err != nil {
		return err
	}
	*x = StartDelay(value)
	return nil
}
func (StartDelay) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{8}
}

type VideoPlacementType int32

const (
	VideoPlacementType_UNDEFINED_VIDEO_PLACEMENT VideoPlacementType = 0
	VideoPlacementType_IN_STREAM_PLACEMENT       VideoPlacementType = 1
	VideoPlacementType_IN_BANNER_PLACEMENT       VideoPlacementType = 2
	VideoPlacementType_IN_ARTICLE_PLACEMENT      VideoPlacementType = 3
	VideoPlacementType_IN_FEED_PLACEMENT         VideoPlacementType = 4
	VideoPlacementType_FLOATING_PLACEMENT        VideoPlacementType = 5
)

var VideoPlacementType_name = map[int32]string{
	0: "UNDEFINED_VIDEO_PLACEMENT",
	1: "IN_STREAM_PLACEMENT",
	2: "IN_BANNER_PLACEMENT",
	3: "IN_ARTICLE_PLACEMENT",
	4: "IN_FEED_PLACEMENT",
	5: "FLOATING_PLACEMENT",
}
var VideoPlacementType_value = map[string]int32{
	"UNDEFINED_VIDEO_PLACEMENT": 0,
	"IN_STREAM_PLACEMENT":       1,
	"IN_BANNER_PLACEMENT":       2,
	"IN_ARTICLE_PLACEMENT":      3,
	"IN_FEED_PLACEMENT":         4,
	"FLOATING_PLACEMENT":        5,
}

func (x VideoPlacementType) Enum() *VideoPlacementType {
	p := new(VideoPlacementType)
	*p = x
	return p
}
func (x VideoPlacementType) String() string {
	return proto.EnumName(VideoPlacementType_name, int32(x))
}
func (x *VideoPlacementType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VideoPlacementType_value, data, "VideoPlacementType")
	if err != nil {
		return err
	}
	*x = VideoPlacementType(value)
	return nil
}
func (VideoPlacementType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{9}
}

type PlaybackCessationMode int32

const (
	PlaybackCessationMode_COMPLETION_OR_USER        PlaybackCessationMode = 1
	PlaybackCessationMode_LEAVING_OR_USER           PlaybackCessationMode = 2
	PlaybackCessationMode_LEAVING_CONTINUES_OR_USER PlaybackCessationMode = 3
)

var PlaybackCessationMode_name = map[int32]string{
	1: "COMPLETION_OR_USER",
	2: "LEAVING_OR_USER",
	3: "LEAVING_CONTINUES_OR_USER",
}
var PlaybackCessationMode_value = map[string]int32{
	"COMPLETION_OR_USER":        1,
	"LEAVING_OR_USER":           2,
	"LEAVING_CONTINUES_OR_USER": 3,
}

func (x PlaybackCessationMode) Enum() *PlaybackCessationMode {
	p := new(PlaybackCessationMode)
	*p = x
	return p
}
func (x PlaybackCessationMode) String() string {
	return proto.EnumName(PlaybackCessationMode_name, int32(x))
}
func (x *PlaybackCessationMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlaybackCessationMode_value, data, "PlaybackCessationMode")
	if err != nil {
		return err
	}
	*x = PlaybackCessationMode(value)
	return nil
}
func (PlaybackCessationMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{10}
}

type ConnectionType int32

const (
	ConnectionType_CONNECTION_UNKNOWN ConnectionType = 0
	ConnectionType_ETHERNET           ConnectionType = 1
	ConnectionType_WIFI               ConnectionType = 2
	ConnectionType_CELL_UNKNOWN       ConnectionType = 3
	ConnectionType_CELL_2G            ConnectionType = 4
	ConnectionType_CELL_3G            ConnectionType = 5
	ConnectionType_CELL_4G            ConnectionType = 6
)

var ConnectionType_name = map[int32]string{
	0: "CONNECTION_UNKNOWN",
	1: "ETHERNET",
	2: "WIFI",
	3: "CELL_UNKNOWN",
	4: "CELL_2G",
	5: "CELL_3G",
	6: "CELL_4G",
}
var ConnectionType_value = map[string]int32{
	"CONNECTION_UNKNOWN": 0,
	"ETHERNET":           1,
	"WIFI":               2,
	"CELL_UNKNOWN":       3,
	"CELL_2G":            4,
	"CELL_3G":            5,
	"CELL_4G":            6,
}

func (x ConnectionType) Enum() *ConnectionType {
	p := new(ConnectionType)
	*p = x
	return p
}
func (x ConnectionType) String() string {
	return proto.EnumName(ConnectionType_name, int32(x))
}
func (x *ConnectionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ConnectionType_value, data, "ConnectionType")
	if err != nil {
		return err
	}
	*x = ConnectionType(value)
	return nil
}
func (ConnectionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{11}
}

type ExpandableDirection int32

const (
	ExpandableDirection_LEFT                  ExpandableDirection = 1
	ExpandableDirection_RIGHT                 ExpandableDirection = 2
	ExpandableDirection_UP                    ExpandableDirection = 3
	ExpandableDirection_DOWN                  ExpandableDirection = 4
	ExpandableDirection_EXPANDABLE_FULLSCREEN ExpandableDirection = 5
)

var ExpandableDirection_name = map[int32]string{
	1: "LEFT",
	2: "RIGHT",
	3: "UP",
	4: "DOWN",
	5: "EXPANDABLE_FULLSCREEN",
}
var ExpandableDirection_value = map[string]int32{
	"LEFT":                  1,
	"RIGHT":                 2,
	"UP":                    3,
	"DOWN":                  4,
	"EXPANDABLE_FULLSCREEN": 5,
}

func (x ExpandableDirection) Enum() *ExpandableDirection {
	p := new(ExpandableDirection)
	*p = x
	return p
}
func (x ExpandableDirection) String() string {
	return proto.EnumName(ExpandableDirection_name, int32(x))
}
func (x *ExpandableDirection) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ExpandableDirection_value, data, "ExpandableDirection")
	if err != nil {
		return err
	}
	*x = ExpandableDirection(value)
	return nil
}
func (ExpandableDirection) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{12}
}

type ContentDeliveryMethod int32

const (
	ContentDeliveryMethod_STREAMING   ContentDeliveryMethod = 1
	ContentDeliveryMethod_PROGRESSIVE ContentDeliveryMethod = 2
)

var ContentDeliveryMethod_name = map[int32]string{
	1: "STREAMING",
	2: "PROGRESSIVE",
}
var ContentDeliveryMethod_value = map[string]int32{
	"STREAMING":   1,
	"PROGRESSIVE": 2,
}

func (x ContentDeliveryMethod) Enum() *ContentDeliveryMethod {
	p := new(ContentDeliveryMethod)
	*p = x
	return p
}
func (x ContentDeliveryMethod) String() string {
	return proto.EnumName(ContentDeliveryMethod_name, int32(x))
}
func (x *ContentDeliveryMethod) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ContentDeliveryMethod_value, data, "ContentDeliveryMethod")
	if err != nil {
		return err
	}
	*x = ContentDeliveryMethod(value)
	return nil
}
func (ContentDeliveryMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{13}
}

type ContentContext int32

const (
	ContentContext_VIDEO           ContentContext = 1
	ContentContext_GAME            ContentContext = 2
	ContentContext_MUSIC           ContentContext = 3
	ContentContext_APPLICATION     ContentContext = 4
	ContentContext_TEXT            ContentContext = 5
	ContentContext_OTHER           ContentContext = 6
	ContentContext_CONTEXT_UNKNOWN ContentContext = 7
)

var ContentContext_name = map[int32]string{
	1: "VIDEO",
	2: "GAME",
	3: "MUSIC",
	4: "APPLICATION",
	5: "TEXT",
	6: "OTHER",
	7: "CONTEXT_UNKNOWN",
}
var ContentContext_value = map[string]int32{
	"VIDEO":           1,
	"GAME":            2,
	"MUSIC":           3,
	"APPLICATION":     4,
	"TEXT":            5,
	"OTHER":           6,
	"CONTEXT_UNKNOWN": 7,
}

func (x ContentContext) Enum() *ContentContext {
	p := new(ContentContext)
	*p = x
	return p
}
func (x ContentContext) String() string {
	return proto.EnumName(ContentContext_name, int32(x))
}
func (x *ContentContext) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ContentContext_value, data, "ContentContext")
	if err != nil {
		return err
	}
	*x = ContentContext(value)
	return nil
}
func (ContentContext) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{14}
}

type ProductionQuality int32

const (
	ProductionQuality_QUALITY_UNKNOWN ProductionQuality = 0
	ProductionQuality_PROFESSIONAL    ProductionQuality = 1
	ProductionQuality_PROSUMER        ProductionQuality = 2
	ProductionQuality_USER_GENERATED  ProductionQuality = 3
)

var ProductionQuality_name = map[int32]string{
	0: "QUALITY_UNKNOWN",
	1: "PROFESSIONAL",
	2: "PROSUMER",
	3: "USER_GENERATED",
}
var ProductionQuality_value = map[string]int32{
	"QUALITY_UNKNOWN": 0,
	"PROFESSIONAL":    1,
	"PROSUMER":        2,
	"USER_GENERATED":  3,
}

func (x ProductionQuality) Enum() *ProductionQuality {
	p := new(ProductionQuality)
	*p = x
	return p
}
func (x ProductionQuality) String() string {
	return proto.EnumName(ProductionQuality_name, int32(x))
}
func (x *ProductionQuality) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProductionQuality_value, data, "ProductionQuality")
	if err != nil {
		return err
	}
	*x = ProductionQuality(value)
	return nil
}
func (ProductionQuality) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{15}
}

type LocationType int32

const (
	LocationType_GPS_LOCATION  LocationType = 1
	LocationType_IP            LocationType = 2
	LocationType_USER_PROVIDED LocationType = 3
)

var LocationType_name = map[int32]string{
	1: "GPS_LOCATION",
	2: "IP",
	3: "USER_PROVIDED",
}
var LocationType_value = map[string]int32{
	"GPS_LOCATION":  1,
	"IP":            2,
	"USER_PROVIDED": 3,
}

func (x LocationType) Enum() *LocationType {
	p := new(LocationType)
	*p = x
	return p
}
func (x LocationType) String() string {
	return proto.EnumName(LocationType_name, int32(x))
}
func (x *LocationType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LocationType_value, data, "LocationType")
	if err != nil {
		return err
	}
	*x = LocationType(value)
	return nil
}
func (LocationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{16}
}

type LocationService int32

const (
	LocationService_IP2LOCATION LocationService = 1
	LocationService_NEUSTAR     LocationService = 2
	LocationService_MAXMIND     LocationService = 3
	LocationService_NETACUITY   LocationService = 4
)

var LocationService_name = map[int32]string{
	1: "IP2LOCATION",
	2: "NEUSTAR",
	3: "MAXMIND",
	4: "NETACUITY",
}
var LocationService_value = map[string]int32{
	"IP2LOCATION": 1,
	"NEUSTAR":     2,
	"MAXMIND":     3,
	"NETACUITY":   4,
}

func (x LocationService) Enum() *LocationService {
	p := new(LocationService)
	*p = x
	return p
}
func (x LocationService) String() string {
	return proto.EnumName(LocationService_name, int32(x))
}
func (x *LocationService) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LocationService_value, data, "LocationService")
	if err != nil {
		return err
	}
	*x = LocationService(value)
	return nil
}
func (LocationService) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{17}
}

type DeviceType int32

const (
	DeviceType_MOBILE            DeviceType = 1
	DeviceType_PERSONAL_COMPUTER DeviceType = 2
	DeviceType_CONNECTED_TV      DeviceType = 3
	DeviceType_HIGHEND_PHONE     DeviceType = 4
	DeviceType_TABLET            DeviceType = 5
	DeviceType_CONNECTED_DEVICE  DeviceType = 6
	DeviceType_SET_TOP_BOX       DeviceType = 7
)

var DeviceType_name = map[int32]string{
	1: "MOBILE",
	2: "PERSONAL_COMPUTER",
	3: "CONNECTED_TV",
	4: "HIGHEND_PHONE",
	5: "TABLET",
	6: "CONNECTED_DEVICE",
	7: "SET_TOP_BOX",
}
var DeviceType_value = map[string]int32{
	"MOBILE":            1,
	"PERSONAL_COMPUTER": 2,
	"CONNECTED_TV":      3,
	"HIGHEND_PHONE":     4,
	"TABLET":            5,
	"CONNECTED_DEVICE":  6,
	"SET_TOP_BOX":       7,
}

func (x DeviceType) Enum() *DeviceType {
	p := new(DeviceType)
	*p = x
	return p
}
func (x DeviceType) String() string {
	return proto.EnumName(DeviceType_name, int32(x))
}
func (x *DeviceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeviceType_value, data, "DeviceType")
	if err != nil {
		return err
	}
	*x = DeviceType(value)
	return nil
}
func (DeviceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{18}
}

type CompanionType int32

const (
	CompanionType_STATIC           CompanionType = 1
	CompanionType_HTML             CompanionType = 2
	CompanionType_COMPANION_IFRAME CompanionType = 3
)

var CompanionType_name = map[int32]string{
	1: "STATIC",
	2: "HTML",
	3: "COMPANION_IFRAME",
}
var CompanionType_value = map[string]int32{
	"STATIC":           1,
	"HTML":             2,
	"COMPANION_IFRAME": 3,
}

func (x CompanionType) Enum() *CompanionType {
	p := new(CompanionType)
	*p = x
	return p
}
func (x CompanionType) String() string {
	return proto.EnumName(CompanionType_name, int32(x))
}
func (x *CompanionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CompanionType_value, data, "CompanionType")
	if err != nil {
		return err
	}
	*x = CompanionType(value)
	return nil
}
func (CompanionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{19}
}

type QAGMediaRating int32

const (
	QAGMediaRating_ALL_AUDIENCES    QAGMediaRating = 1
	QAGMediaRating_EVERYONE_OVER_12 QAGMediaRating = 2
	QAGMediaRating_MATURE           QAGMediaRating = 3
)

var QAGMediaRating_name = map[int32]string{
	1: "ALL_AUDIENCES",
	2: "EVERYONE_OVER_12",
	3: "MATURE",
}
var QAGMediaRating_value = map[string]int32{
	"ALL_AUDIENCES":    1,
	"EVERYONE_OVER_12": 2,
	"MATURE":           3,
}

func (x QAGMediaRating) Enum() *QAGMediaRating {
	p := new(QAGMediaRating)
	*p = x
	return p
}
func (x QAGMediaRating) String() string {
	return proto.EnumName(QAGMediaRating_name, int32(x))
}
func (x *QAGMediaRating) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(QAGMediaRating_value, data, "QAGMediaRating")
	if err != nil {
		return err
	}
	*x = QAGMediaRating(value)
	return nil
}
func (QAGMediaRating) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{20}
}

type NoBidReason int32

const (
	NoBidReason_UNKNOWN_ERROR              NoBidReason = 0
	NoBidReason_TECHNICAL_ERROR            NoBidReason = 1
	NoBidReason_INVALID_REQUEST            NoBidReason = 2
	NoBidReason_KNOWN_WEB_SPIDER           NoBidReason = 3
	NoBidReason_SUSPECTED_NONHUMAN_TRAFFIC NoBidReason = 4
	NoBidReason_CLOUD_DATACENTER_PROXYIP   NoBidReason = 5
	NoBidReason_UNSUPPORTED_DEVICE         NoBidReason = 6
	NoBidReason_BLOCKED_PUBLISHER          NoBidReason = 7
	NoBidReason_UNMATCHED_USER             NoBidReason = 8
	NoBidReason_DAILY_READER_CAP           NoBidReason = 9
	NoBidReason_DAILY_DOMAIN_CAP           NoBidReason = 10
)

var NoBidReason_name = map[int32]string{
	0:  "UNKNOWN_ERROR",
	1:  "TECHNICAL_ERROR",
	2:  "INVALID_REQUEST",
	3:  "KNOWN_WEB_SPIDER",
	4:  "SUSPECTED_NONHUMAN_TRAFFIC",
	5:  "CLOUD_DATACENTER_PROXYIP",
	6:  "UNSUPPORTED_DEVICE",
	7:  "BLOCKED_PUBLISHER",
	8:  "UNMATCHED_USER",
	9:  "DAILY_READER_CAP",
	10: "DAILY_DOMAIN_CAP",
}
var NoBidReason_value = map[string]int32{
	"UNKNOWN_ERROR":              0,
	"TECHNICAL_ERROR":            1,
	"INVALID_REQUEST":            2,
	"KNOWN_WEB_SPIDER":           3,
	"SUSPECTED_NONHUMAN_TRAFFIC": 4,
	"CLOUD_DATACENTER_PROXYIP":   5,
	"UNSUPPORTED_DEVICE":         6,
	"BLOCKED_PUBLISHER":          7,
	"UNMATCHED_USER":             8,
	"DAILY_READER_CAP":           9,
	"DAILY_DOMAIN_CAP":           10,
}

func (x NoBidReason) Enum() *NoBidReason {
	p := new(NoBidReason)
	*p = x
	return p
}
func (x NoBidReason) String() string {
	return proto.EnumName(NoBidReason_name, int32(x))
}
func (x *NoBidReason) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NoBidReason_value, data, "NoBidReason")
	if err != nil {
		return err
	}
	*x = NoBidReason(value)
	return nil
}
func (NoBidReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{21}
}

type LossReason int32

const (
	LossReason_BID_WON                            LossReason = 0
	LossReason_INTERNAL_ERROR                     LossReason = 1
	LossReason_IMP_EXPIRED                        LossReason = 2
	LossReason_INVALID_BID                        LossReason = 3
	LossReason_INVALID_DEAL_ID                    LossReason = 4
	LossReason_INVALID_AUCTION_ID                 LossReason = 5
	LossReason_INVALID_ADOMAIN                    LossReason = 6
	LossReason_MISSING_MARKUP                     LossReason = 7
	LossReason_MISSING_CREATIVE_ID                LossReason = 8
	LossReason_MISSING_PRICE                      LossReason = 9
	LossReason_MISSING_MIN_CREATIVE_APPROVAL_DATA LossReason = 10
	LossReason_BID_BELOW_FLOOR                    LossReason = 100
	LossReason_BID_BELOW_DEAL_FLOOR               LossReason = 101
	LossReason_LOST_HIGHER_BID                    LossReason = 102
	LossReason_LOST_PMP_DEAL                      LossReason = 103
	LossReason_SEAT_BLOCKED                       LossReason = 104
	LossReason_CREATIVE_REASON_UNKNOWN            LossReason = 200
	LossReason_CREATIVE_PENDING                   LossReason = 201
	LossReason_CREATIVE_DISAPPROVED               LossReason = 202
	LossReason_CREATIVE_SIZE                      LossReason = 203
	LossReason_CREATIVE_FORMAT                    LossReason = 204
	LossReason_CREATIVE_ADVERTISER_EXCLUSION      LossReason = 205
	LossReason_CREATIVE_APP_EXCLUSION             LossReason = 206
	LossReason_CREATIVE_NOT_SECURE                LossReason = 207
	LossReason_CREATIVE_LANGUAGE_EXCLUSION        LossReason = 208
	LossReason_CREATIVE_CATEGORY_EXCLUSION        LossReason = 209
	LossReason_CREATIVE_ATTRIBUTE_EXCLUSION       LossReason = 210
	LossReason_CREATIVE_ADTYPE_EXCLUSION          LossReason = 211
	LossReason_CREATIVE_ANIMATION_LONG            LossReason = 212
	LossReason_CREATIVE_NOT_ALLOWED_PMP           LossReason = 213
)

var LossReason_name = map[int32]string{
	0:   "BID_WON",
	1:   "INTERNAL_ERROR",
	2:   "IMP_EXPIRED",
	3:   "INVALID_BID",
	4:   "INVALID_DEAL_ID",
	5:   "INVALID_AUCTION_ID",
	6:   "INVALID_ADOMAIN",
	7:   "MISSING_MARKUP",
	8:   "MISSING_CREATIVE_ID",
	9:   "MISSING_PRICE",
	10:  "MISSING_MIN_CREATIVE_APPROVAL_DATA",
	100: "BID_BELOW_FLOOR",
	101: "BID_BELOW_DEAL_FLOOR",
	102: "LOST_HIGHER_BID",
	103: "LOST_PMP_DEAL",
	104: "SEAT_BLOCKED",
	200: "CREATIVE_REASON_UNKNOWN",
	201: "CREATIVE_PENDING",
	202: "CREATIVE_DISAPPROVED",
	203: "CREATIVE_SIZE",
	204: "CREATIVE_FORMAT",
	205: "CREATIVE_ADVERTISER_EXCLUSION",
	206: "CREATIVE_APP_EXCLUSION",
	207: "CREATIVE_NOT_SECURE",
	208: "CREATIVE_LANGUAGE_EXCLUSION",
	209: "CREATIVE_CATEGORY_EXCLUSION",
	210: "CREATIVE_ATTRIBUTE_EXCLUSION",
	211: "CREATIVE_ADTYPE_EXCLUSION",
	212: "CREATIVE_ANIMATION_LONG",
	213: "CREATIVE_NOT_ALLOWED_PMP",
}
var LossReason_value = map[string]int32{
	"BID_WON":                            0,
	"INTERNAL_ERROR":                     1,
	"IMP_EXPIRED":                        2,
	"INVALID_BID":                        3,
	"INVALID_DEAL_ID":                    4,
	"INVALID_AUCTION_ID":                 5,
	"INVALID_ADOMAIN":                    6,
	"MISSING_MARKUP":                     7,
	"MISSING_CREATIVE_ID":                8,
	"MISSING_PRICE":                      9,
	"MISSING_MIN_CREATIVE_APPROVAL_DATA": 10,
	"BID_BELOW_FLOOR":                    100,
	"BID_BELOW_DEAL_FLOOR":               101,
	"LOST_HIGHER_BID":                    102,
	"LOST_PMP_DEAL":                      103,
	"SEAT_BLOCKED":                       104,
	"CREATIVE_REASON_UNKNOWN":            200,
	"CREATIVE_PENDING":                   201,
	"CREATIVE_DISAPPROVED":               202,
	"CREATIVE_SIZE":                      203,
	"CREATIVE_FORMAT":                    204,
	"CREATIVE_ADVERTISER_EXCLUSION":      205,
	"CREATIVE_APP_EXCLUSION":             206,
	"CREATIVE_NOT_SECURE":                207,
	"CREATIVE_LANGUAGE_EXCLUSION":        208,
	"CREATIVE_CATEGORY_EXCLUSION":        209,
	"CREATIVE_ATTRIBUTE_EXCLUSION":       210,
	"CREATIVE_ADTYPE_EXCLUSION":          211,
	"CREATIVE_ANIMATION_LONG":            212,
	"CREATIVE_NOT_ALLOWED_PMP":           213,
}

func (x LossReason) Enum() *LossReason {
	p := new(LossReason)
	*p = x
	return p
}
func (x LossReason) String() string {
	return proto.EnumName(LossReason_name, int32(x))
}
func (x *LossReason) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LossReason_value, data, "LossReason")
	if err != nil {
		return err
	}
	*x = LossReason(value)
	return nil
}
func (LossReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{22}
}

type FeedType int32

const (
	FeedType_MUSIC_SERVICE FeedType = 1
	FeedType_BROADCAST     FeedType = 2
	FeedType_PODCAST       FeedType = 3
)

var FeedType_name = map[int32]string{
	1: "MUSIC_SERVICE",
	2: "BROADCAST",
	3: "PODCAST",
}
var FeedType_value = map[string]int32{
	"MUSIC_SERVICE": 1,
	"BROADCAST":     2,
	"PODCAST":       3,
}

func (x FeedType) Enum() *FeedType {
	p := new(FeedType)
	*p = x
	return p
}
func (x FeedType) String() string {
	return proto.EnumName(FeedType_name, int32(x))
}
func (x *FeedType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FeedType_value, data, "FeedType")
	if err != nil {
		return err
	}
	*x = FeedType(value)
	return nil
}
func (FeedType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{23}
}

type VolumeNormalizationMode int32

const (
	VolumeNormalizationMode_NONE           VolumeNormalizationMode = 0
	VolumeNormalizationMode_AVERAGE_VOLUME VolumeNormalizationMode = 1
	VolumeNormalizationMode_PEAK_VOLUME    VolumeNormalizationMode = 2
	VolumeNormalizationMode_LOUDNESS       VolumeNormalizationMode = 3
	VolumeNormalizationMode_CUSTOM_VOLUME  VolumeNormalizationMode = 4
)

var VolumeNormalizationMode_name = map[int32]string{
	0: "NONE",
	1: "AVERAGE_VOLUME",
	2: "PEAK_VOLUME",
	3: "LOUDNESS",
	4: "CUSTOM_VOLUME",
}
var VolumeNormalizationMode_value = map[string]int32{
	"NONE":           0,
	"AVERAGE_VOLUME": 1,
	"PEAK_VOLUME":    2,
	"LOUDNESS":       3,
	"CUSTOM_VOLUME":  4,
}

func (x VolumeNormalizationMode) Enum() *VolumeNormalizationMode {
	p := new(VolumeNormalizationMode)
	*p = x
	return p
}
func (x VolumeNormalizationMode) String() string {
	return proto.EnumName(VolumeNormalizationMode_name, int32(x))
}
func (x *VolumeNormalizationMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VolumeNormalizationMode_value, data, "VolumeNormalizationMode")
	if err != nil {
		return err
	}
	*x = VolumeNormalizationMode(value)
	return nil
}
func (VolumeNormalizationMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{24}
}

type LayoutId int32

const (
	LayoutId_CONTENT_WALL   LayoutId = 1
	LayoutId_APP_WALL       LayoutId = 2
	LayoutId_NEWS_FEED      LayoutId = 3
	LayoutId_CHAT_LIST      LayoutId = 4
	LayoutId_CAROUSEL       LayoutId = 5
	LayoutId_CONTENT_STREAM LayoutId = 6
	LayoutId_GRID           LayoutId = 7
)

var LayoutId_name = map[int32]string{
	1: "CONTENT_WALL",
	2: "APP_WALL",
	3: "NEWS_FEED",
	4: "CHAT_LIST",
	5: "CAROUSEL",
	6: "CONTENT_STREAM",
	7: "GRID",
}
var LayoutId_value = map[string]int32{
	"CONTENT_WALL":   1,
	"APP_WALL":       2,
	"NEWS_FEED":      3,
	"CHAT_LIST":      4,
	"CAROUSEL":       5,
	"CONTENT_STREAM": 6,
	"GRID":           7,
}

func (x LayoutId) Enum() *LayoutId {
	p := new(LayoutId)
	*p = x
	return p
}
func (x LayoutId) String() string {
	return proto.EnumName(LayoutId_name, int32(x))
}
func (x *LayoutId) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LayoutId_value, data, "LayoutId")
	if err != nil {
		return err
	}
	*x = LayoutId(value)
	return nil
}
func (LayoutId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{25}
}

type AdUnitId int32

const (
	AdUnitId_PAID_SEARCH_UNIT      AdUnitId = 1
	AdUnitId_RECOMMENDATION_WIDGET AdUnitId = 2
	AdUnitId_PROMOTED_LISTING      AdUnitId = 3
	AdUnitId_IAB_IN_AD_NATIVE      AdUnitId = 4
	AdUnitId_ADUNITID_CUSTOM       AdUnitId = 5
)

var AdUnitId_name = map[int32]string{
	1: "PAID_SEARCH_UNIT",
	2: "RECOMMENDATION_WIDGET",
	3: "PROMOTED_LISTING",
	4: "IAB_IN_AD_NATIVE",
	5: "ADUNITID_CUSTOM",
}
var AdUnitId_value = map[string]int32{
	"PAID_SEARCH_UNIT":      1,
	"RECOMMENDATION_WIDGET": 2,
	"PROMOTED_LISTING":      3,
	"IAB_IN_AD_NATIVE":      4,
	"ADUNITID_CUSTOM":       5,
}

func (x AdUnitId) Enum() *AdUnitId {
	p := new(AdUnitId)
	*p = x
	return p
}
func (x AdUnitId) String() string {
	return proto.EnumName(AdUnitId_name, int32(x))
}
func (x *AdUnitId) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdUnitId_value, data, "AdUnitId")
	if err != nil {
		return err
	}
	*x = AdUnitId(value)
	return nil
}
func (AdUnitId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{26}
}

type ContextType int32

const (
	ContextType_CONTENT ContextType = 1
	ContextType_SOCIAL  ContextType = 2
	ContextType_PRODUCT ContextType = 3
)

var ContextType_name = map[int32]string{
	1: "CONTENT",
	2: "SOCIAL",
	3: "PRODUCT",
}
var ContextType_value = map[string]int32{
	"CONTENT": 1,
	"SOCIAL":  2,
	"PRODUCT": 3,
}

func (x ContextType) Enum() *ContextType {
	p := new(ContextType)
	*p = x
	return p
}
func (x ContextType) String() string {
	return proto.EnumName(ContextType_name, int32(x))
}
func (x *ContextType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ContextType_value, data, "ContextType")
	if err != nil {
		return err
	}
	*x = ContextType(value)
	return nil
}
func (ContextType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{27}
}

type ContextSubtype int32

const (
	ContextSubtype_CONTENT_GENERAL_OR_MIXED ContextSubtype = 10
	ContextSubtype_CONTENT_ARTICLE          ContextSubtype = 11
	ContextSubtype_CONTENT_VIDEO            ContextSubtype = 12
	ContextSubtype_CONTENT_AUDIO            ContextSubtype = 13
	ContextSubtype_CONTENT_IMAGE            ContextSubtype = 14
	ContextSubtype_CONTENT_USER_GENERATED   ContextSubtype = 15
	ContextSubtype_SOCIAL_GENERAL           ContextSubtype = 20
	ContextSubtype_SOCIAL_EMAIL             ContextSubtype = 21
	ContextSubtype_SOCIAL_CHAT_IM           ContextSubtype = 22
	ContextSubtype_PRODUCT_SELLING          ContextSubtype = 30
	ContextSubtype_PRODUCT_MARKETPLACE      ContextSubtype = 31
	ContextSubtype_PRODUCT_REVIEW           ContextSubtype = 32
)

var ContextSubtype_name = map[int32]string{
	10: "CONTENT_GENERAL_OR_MIXED",
	11: "CONTENT_ARTICLE",
	12: "CONTENT_VIDEO",
	13: "CONTENT_AUDIO",
	14: "CONTENT_IMAGE",
	15: "CONTENT_USER_GENERATED",
	20: "SOCIAL_GENERAL",
	21: "SOCIAL_EMAIL",
	22: "SOCIAL_CHAT_IM",
	30: "PRODUCT_SELLING",
	31: "PRODUCT_MARKETPLACE",
	32: "PRODUCT_REVIEW",
}
var ContextSubtype_value = map[string]int32{
	"CONTENT_GENERAL_OR_MIXED": 10,
	"CONTENT_ARTICLE":          11,
	"CONTENT_VIDEO":            12,
	"CONTENT_AUDIO":            13,
	"CONTENT_IMAGE":            14,
	"CONTENT_USER_GENERATED":   15,
	"SOCIAL_GENERAL":           20,
	"SOCIAL_EMAIL":             21,
	"SOCIAL_CHAT_IM":           22,
	"PRODUCT_SELLING":          30,
	"PRODUCT_MARKETPLACE":      31,
	"PRODUCT_REVIEW":           32,
}

func (x ContextSubtype) Enum() *ContextSubtype {
	p := new(ContextSubtype)
	*p = x
	return p
}
func (x ContextSubtype) String() string {
	return proto.EnumName(ContextSubtype_name, int32(x))
}
func (x *ContextSubtype) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ContextSubtype_value, data, "ContextSubtype")
	if err != nil {
		return err
	}
	*x = ContextSubtype(value)
	return nil
}
func (ContextSubtype) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{28}
}

type PlacementType int32

const (
	PlacementType_IN_FEED        PlacementType = 1
	PlacementType_ATOMIC_UNIT    PlacementType = 2
	PlacementType_OUTSIDE        PlacementType = 3
	PlacementType_RECOMMENDATION PlacementType = 4
)

var PlacementType_name = map[int32]string{
	1: "IN_FEED",
	2: "ATOMIC_UNIT",
	3: "OUTSIDE",
	4: "RECOMMENDATION",
}
var PlacementType_value = map[string]int32{
	"IN_FEED":        1,
	"ATOMIC_UNIT":    2,
	"OUTSIDE":        3,
	"RECOMMENDATION": 4,
}

func (x PlacementType) Enum() *PlacementType {
	p := new(PlacementType)
	*p = x
	return p
}
func (x PlacementType) String() string {
	return proto.EnumName(PlacementType_name, int32(x))
}
func (x *PlacementType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlacementType_value, data, "PlacementType")
	if err != nil {
		return err
	}
	*x = PlacementType(value)
	return nil
}
func (PlacementType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{29}
}

type DataAssetType int32

const (
	DataAssetType_SPONSORED  DataAssetType = 1
	DataAssetType_DESC       DataAssetType = 2
	DataAssetType_RATING     DataAssetType = 3
	DataAssetType_LIKES      DataAssetType = 4
	DataAssetType_DOWNLOADS  DataAssetType = 5
	DataAssetType_PRICE      DataAssetType = 6
	DataAssetType_SALEPRICE  DataAssetType = 7
	DataAssetType_PHONE      DataAssetType = 8
	DataAssetType_ADDRESS    DataAssetType = 9
	DataAssetType_DESC2      DataAssetType = 10
	DataAssetType_DISPLAYURL DataAssetType = 11
	DataAssetType_CTATEXT    DataAssetType = 12
)

var DataAssetType_name = map[int32]string{
	1:  "SPONSORED",
	2:  "DESC",
	3:  "RATING",
	4:  "LIKES",
	5:  "DOWNLOADS",
	6:  "PRICE",
	7:  "SALEPRICE",
	8:  "PHONE",
	9:  "ADDRESS",
	10: "DESC2",
	11: "DISPLAYURL",
	12: "CTATEXT",
}
var DataAssetType_value = map[string]int32{
	"SPONSORED":  1,
	"DESC":       2,
	"RATING":     3,
	"LIKES":      4,
	"DOWNLOADS":  5,
	"PRICE":      6,
	"SALEPRICE":  7,
	"PHONE":      8,
	"ADDRESS":    9,
	"DESC2":      10,
	"DISPLAYURL": 11,
	"CTATEXT":    12,
}

func (x DataAssetType) Enum() *DataAssetType {
	p := new(DataAssetType)
	*p = x
	return p
}
func (x DataAssetType) String() string {
	return proto.EnumName(DataAssetType_name, int32(x))
}
func (x *DataAssetType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DataAssetType_value, data, "DataAssetType")
	if err != nil {
		return err
	}
	*x = DataAssetType(value)
	return nil
}
func (DataAssetType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{30}
}

type ImageAssetType int32

const (
	ImageAssetType_ICON ImageAssetType = 1
	ImageAssetType_LOGO ImageAssetType = 2
	ImageAssetType_MAIN ImageAssetType = 3
)

var ImageAssetType_name = map[int32]string{
	1: "ICON",
	2: "LOGO",
	3: "MAIN",
}
var ImageAssetType_value = map[string]int32{
	"ICON": 1,
	"LOGO": 2,
	"MAIN": 3,
}

func (x ImageAssetType) Enum() *ImageAssetType {
	p := new(ImageAssetType)
	*p = x
	return p
}
func (x ImageAssetType) String() string {
	return proto.EnumName(ImageAssetType_name, int32(x))
}
func (x *ImageAssetType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ImageAssetType_value, data, "ImageAssetType")
	if err != nil {
		return err
	}
	*x = ImageAssetType(value)
	return nil
}
func (ImageAssetType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{31}
}

type EventType int32

const (
	EventType_IMPRESSION        EventType = 1
	EventType_VIEWABLE_MRC_50   EventType = 2
	EventType_VIEWABLE_MRC_100  EventType = 3
	EventType_VIEWABLE_VIDEO_50 EventType = 4
)

var EventType_name = map[int32]string{
	1: "IMPRESSION",
	2: "VIEWABLE_MRC_50",
	3: "VIEWABLE_MRC_100",
	4: "VIEWABLE_VIDEO_50",
}
var EventType_value = map[string]int32{
	"IMPRESSION":        1,
	"VIEWABLE_MRC_50":   2,
	"VIEWABLE_MRC_100":  3,
	"VIEWABLE_VIDEO_50": 4,
}

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}
func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}
func (x *EventType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EventType_value, data, "EventType")
	if err != nil {
		return err
	}
	*x = EventType(value)
	return nil
}
func (EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{32}
}

type EventTrackingMethod int32

const (
	EventTrackingMethod_IMG EventTrackingMethod = 1
	EventTrackingMethod_JS  EventTrackingMethod = 2
)

var EventTrackingMethod_name = map[int32]string{
	1: "IMG",
	2: "JS",
}
var EventTrackingMethod_value = map[string]int32{
	"IMG": 1,
	"JS":  2,
}

func (x EventTrackingMethod) Enum() *EventTrackingMethod {
	p := new(EventTrackingMethod)
	*p = x
	return p
}
func (x EventTrackingMethod) String() string {
	return proto.EnumName(EventTrackingMethod_name, int32(x))
}
func (x *EventTrackingMethod) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EventTrackingMethod_value, data, "EventTrackingMethod")
	if err != nil {
		return err
	}
	*x = EventTrackingMethod(value)
	return nil
}
func (EventTrackingMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_madx_enums_276c3cbaba56f623, []int{33}
}

func init() {
	proto.RegisterEnum("openrtb.AuctionType", AuctionType_name, AuctionType_value)
	proto.RegisterEnum("openrtb.BannerAdType", BannerAdType_name, BannerAdType_value)
	proto.RegisterEnum("openrtb.CreativeAttribute", CreativeAttribute_name, CreativeAttribute_value)
	proto.RegisterEnum("openrtb.APIFramework", APIFramework_name, APIFramework_value)
	proto.RegisterEnum("openrtb.AdPosition", AdPosition_name, AdPosition_value)
	proto.RegisterEnum("openrtb.VideoLinearity", VideoLinearity_name, VideoLinearity_value)
	proto.RegisterEnum("openrtb.Protocol", Protocol_name, Protocol_value)
	proto.RegisterEnum("openrtb.PlaybackMethod", PlaybackMethod_name, PlaybackMethod_value)
	proto.RegisterEnum("openrtb.StartDelay", StartDelay_name, StartDelay_value)
	proto.RegisterEnum("openrtb.VideoPlacementType", VideoPlacementType_name, VideoPlacementType_value)
	proto.RegisterEnum("openrtb.PlaybackCessationMode", PlaybackCessationMode_name, PlaybackCessationMode_value)
	proto.RegisterEnum("openrtb.ConnectionType", ConnectionType_name, ConnectionType_value)
	proto.RegisterEnum("openrtb.ExpandableDirection", ExpandableDirection_name, ExpandableDirection_value)
	proto.RegisterEnum("openrtb.ContentDeliveryMethod", ContentDeliveryMethod_name, ContentDeliveryMethod_value)
	proto.RegisterEnum("openrtb.ContentContext", ContentContext_name, ContentContext_value)
	proto.RegisterEnum("openrtb.ProductionQuality", ProductionQuality_name, ProductionQuality_value)
	proto.RegisterEnum("openrtb.LocationType", LocationType_name, LocationType_value)
	proto.RegisterEnum("openrtb.LocationService", LocationService_name, LocationService_value)
	proto.RegisterEnum("openrtb.DeviceType", DeviceType_name, DeviceType_value)
	proto.RegisterEnum("openrtb.CompanionType", CompanionType_name, CompanionType_value)
	proto.RegisterEnum("openrtb.QAGMediaRating", QAGMediaRating_name, QAGMediaRating_value)
	proto.RegisterEnum("openrtb.NoBidReason", NoBidReason_name, NoBidReason_value)
	proto.RegisterEnum("openrtb.LossReason", LossReason_name, LossReason_value)
	proto.RegisterEnum("openrtb.FeedType", FeedType_name, FeedType_value)
	proto.RegisterEnum("openrtb.VolumeNormalizationMode", VolumeNormalizationMode_name, VolumeNormalizationMode_value)
	proto.RegisterEnum("openrtb.LayoutId", LayoutId_name, LayoutId_value)
	proto.RegisterEnum("openrtb.AdUnitId", AdUnitId_name, AdUnitId_value)
	proto.RegisterEnum("openrtb.ContextType", ContextType_name, ContextType_value)
	proto.RegisterEnum("openrtb.ContextSubtype", ContextSubtype_name, ContextSubtype_value)
	proto.RegisterEnum("openrtb.PlacementType", PlacementType_name, PlacementType_value)
	proto.RegisterEnum("openrtb.DataAssetType", DataAssetType_name, DataAssetType_value)
	proto.RegisterEnum("openrtb.ImageAssetType", ImageAssetType_name, ImageAssetType_value)
	proto.RegisterEnum("openrtb.EventType", EventType_name, EventType_value)
	proto.RegisterEnum("openrtb.EventTrackingMethod", EventTrackingMethod_name, EventTrackingMethod_value)
}

func init() { proto.RegisterFile("madx_enums.proto", fileDescriptor_madx_enums_276c3cbaba56f623) }

var fileDescriptor_madx_enums_276c3cbaba56f623 = []byte{
	// 2540 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x57, 0x4b, 0x8f, 0x1b, 0xb9,
	0xb5, 0xb6, 0xde, 0xea, 0xd3, 0x2f, 0x76, 0xd9, 0xed, 0xc7, 0xcc, 0xd8, 0x77, 0x66, 0x70, 0x31,
	0x8b, 0xc2, 0xc5, 0xa0, 0x6d, 0xcf, 0xe0, 0x22, 0x98, 0x15, 0x55, 0x45, 0x49, 0x9c, 0x66, 0x91,
	0x65, 0x92, 0x25, 0xb5, 0x82, 0x04, 0x84, 0xdc, 0x5d, 0xe3, 0x11, 0xdc, 0x2d, 0x19, 0x6a, 0xd9,
	0xb1, 0x83, 0xec, 0xb3, 0x9a, 0x5d, 0x7e, 0x44, 0x16, 0x41, 0x7e, 0x43, 0x96, 0x79, 0xbf, 0xf3,
	0x6b, 0x02, 0x24, 0xc1, 0x21, 0xf5, 0x6a, 0xa7, 0x37, 0x2d, 0x9e, 0x43, 0x9e, 0x3a, 0x3c, 0x8f,
	0xef, 0x7c, 0x04, 0x72, 0x35, 0xbe, 0x78, 0xeb, 0xca, 0xe9, 0xeb, 0xab, 0xeb, 0xcf, 0x5f, 0xcd,
	0x67, 0x8b, 0x59, 0xd4, 0x9a, 0xbd, 0x2a, 0xa7, 0xf3, 0xc5, 0xf3, 0x98, 0xc2, 0x2e, 0x7d, 0x7d,
	0xbe, 0x98, 0xcc, 0xa6, 0xf6, 0xdd, 0xab, 0x32, 0x3a, 0x84, 0xdd, 0x2e, 0xd7, 0xc6, 0xba, 0x5c,
	0xf3, 0x84, 0x91, 0x4a, 0x44, 0x60, 0xcf, 0xb0, 0x44, 0xc9, 0x74, 0x29, 0xa9, 0x86, 0x2d, 0x67,
	0x6c, 0x25, 0xa8, 0xc5, 0x05, 0xec, 0x75, 0xc6, 0xd3, 0x69, 0x39, 0xa7, 0x17, 0xde, 0xc6, 0x11,
	0xec, 0x9f, 0xf5, 0x6d, 0x26, 0x9c, 0x65, 0x67, 0xd6, 0xd1, 0x94, 0x54, 0xa2, 0xdb, 0x70, 0x18,
	0x44, 0x1d, 0x2a, 0x25, 0xd3, 0x28, 0xac, 0xe2, 0xbe, 0xaf, 0xe9, 0x80, 0x9a, 0x44, 0xf3, 0xdc,
	0xef, 0xab, 0x45, 0x00, 0x4d, 0xde, 0xd5, 0x34, 0x63, 0xa4, 0x1e, 0xff, 0xa2, 0x06, 0x47, 0xc9,
	0xbc, 0x1c, 0x2f, 0x26, 0x6f, 0x4a, 0xba, 0x58, 0xcc, 0x27, 0xcf, 0x5f, 0x2f, 0x4a, 0xb4, 0x44,
	0x8b, 0x94, 0x2b, 0x47, 0x0b, 0xab, 0x5c, 0x2e, 0xe8, 0x88, 0x54, 0xa2, 0xfb, 0x70, 0x27, 0x08,
	0x0b, 0xc3, 0xb4, 0xe3, 0x92, 0x5b, 0x4e, 0x2d, 0xc3, 0x6f, 0xdc, 0x87, 0x3b, 0xec, 0x2c, 0xa7,
	0x32, 0xa5, 0x1d, 0xc1, 0xfc, 0x99, 0x8c, 0x5a, 0x9e, 0x90, 0x5a, 0xf4, 0x08, 0x3e, 0xd8, 0xd2,
	0x24, 0x82, 0x27, 0xa7, 0x5b, 0x27, 0xeb, 0xd1, 0x27, 0xf0, 0x70, 0x4b, 0xaf, 0x95, 0x10, 0x6a,
	0x70, 0xc3, 0x78, 0x23, 0x7a, 0x08, 0x0f, 0x06, 0x3c, 0x65, 0xca, 0x71, 0xb9, 0xbe, 0xd8, 0xda,
	0xab, 0x66, 0xf4, 0x29, 0x3c, 0x7a, 0x5f, 0xfd, 0x9e, 0x7f, 0xad, 0xa8, 0x05, 0xb5, 0x5c, 0xe5,
	0xa4, 0x8d, 0xb6, 0x72, 0xad, 0x06, 0x2a, 0xa1, 0x96, 0x0f, 0x98, 0x53, 0xda, 0x99, 0xa2, 0xd7,
	0x63, 0x06, 0x57, 0x64, 0x27, 0xda, 0x83, 0x36, 0x95, 0x52, 0x8d, 0xb8, 0xec, 0x11, 0x88, 0x76,
	0xa1, 0x65, 0x0a, 0x3d, 0x60, 0x23, 0x43, 0x76, 0xa3, 0x7d, 0xd8, 0xf1, 0x81, 0x56, 0x52, 0x8c,
	0xc8, 0x5e, 0x74, 0x07, 0xc8, 0xf2, 0x2b, 0x96, 0x69, 0x9a, 0xf8, 0xf3, 0xfb, 0x78, 0x9b, 0x21,
	0x97, 0xa9, 0x1a, 0x1a, 0x97, 0x72, 0x2a, 0x54, 0x0f, 0xbf, 0x40, 0x05, 0xd3, 0xd6, 0x19, 0x3b,
	0x12, 0x8c, 0x1c, 0x44, 0x1f, 0xc2, 0xbd, 0x3e, 0x35, 0x2e, 0x04, 0x52, 0x49, 0xa7, 0xba, 0x5d,
	0xd7, 0x29, 0xac, 0x55, 0x92, 0x1c, 0x46, 0xc7, 0x70, 0x44, 0x53, 0x97, 0x50, 0xe9, 0x3a, 0xcc,
	0x99, 0x53, 0x9e, 0xe7, 0x2c, 0x25, 0x24, 0xda, 0x81, 0x46, 0x57, 0x50, 0xd3, 0x27, 0x47, 0xf1,
	0x37, 0xb0, 0x47, 0x73, 0xde, 0x9d, 0x8f, 0xaf, 0xca, 0x1f, 0xcd, 0xe6, 0x2f, 0xd1, 0xc7, 0x41,
	0x4e, 0x79, 0xea, 0x1e, 0x93, 0xca, 0x66, 0xf1, 0x84, 0x54, 0x71, 0x91, 0xe9, 0xa0, 0xa9, 0xa1,
	0x05, 0xa5, 0xb3, 0x8c, 0x92, 0xfa, 0x46, 0xfe, 0x84, 0x34, 0x36, 0x8b, 0xa7, 0xa4, 0x89, 0x65,
	0xa1, 0x32, 0x7f, 0xa0, 0x15, 0xff, 0xbc, 0x02, 0x40, 0x2f, 0xf2, 0xd9, 0xf5, 0x04, 0x8b, 0x16,
	0xf7, 0x15, 0xf2, 0x54, 0xaa, 0xa1, 0x24, 0xb7, 0xa2, 0x08, 0x0e, 0x68, 0x47, 0x0d, 0x98, 0xb3,
	0x7d, 0xe6, 0xba, 0x4a, 0x60, 0xe9, 0xfd, 0x2f, 0x7c, 0x9c, 0xb2, 0x5c, 0xb3, 0x04, 0x23, 0xee,
	0x04, 0x3f, 0x65, 0x62, 0xe4, 0x3a, 0x4c, 0xa8, 0xe1, 0x66, 0x57, 0x15, 0x4f, 0xbe, 0x27, 0xf3,
	0xc5, 0xd8, 0x67, 0x34, 0x65, 0x9a, 0xd4, 0xf1, 0x77, 0x57, 0x29, 0xcb, 0x74, 0x70, 0xcd, 0xf0,
	0x94, 0x75, 0xa8, 0x26, 0xcd, 0xe8, 0x03, 0xb8, 0x4b, 0x53, 0x97, 0x2b, 0xc3, 0x2d, 0x57, 0xd2,
	0x75, 0x0b, 0x21, 0x4c, 0xa2, 0x19, 0x93, 0xa4, 0x15, 0xff, 0x1f, 0x1c, 0x0c, 0x26, 0x17, 0xe5,
	0x4c, 0x4c, 0xa6, 0xe5, 0x78, 0x3e, 0x59, 0xbc, 0x43, 0x33, 0x82, 0x4b, 0x46, 0x35, 0xa9, 0x44,
	0x07, 0x00, 0x52, 0x49, 0xb7, 0x5c, 0x57, 0xe3, 0x5f, 0x55, 0xa0, 0x9d, 0x63, 0x73, 0x9e, 0xcf,
	0x2e, 0x31, 0xdf, 0x03, 0x6a, 0xac, 0x7b, 0xec, 0x4e, 0x48, 0x65, 0xbd, 0x7a, 0xe2, 0x4e, 0x48,
	0x75, 0xbd, 0x7a, 0xea, 0x4e, 0x48, 0x0d, 0xf3, 0xbd, 0xda, 0xe9, 0x86, 0x9a, 0xe6, 0xb9, 0xf7,
	0x77, 0x25, 0x7d, 0xb2, 0x25, 0x6d, 0xac, 0xa5, 0x4f, 0xb7, 0xa4, 0xcd, 0xb5, 0xbd, 0x2f, 0xdc,
	0x09, 0x69, 0xad, 0xf7, 0x7c, 0xb1, 0xb5, 0xa7, 0x8d, 0x45, 0x96, 0xd2, 0x95, 0x43, 0x3b, 0x58,
	0x0e, 0xeb, 0xe5, 0x7a, 0x17, 0xc4, 0xdf, 0x55, 0xe0, 0x20, 0xbf, 0x1c, 0xbf, 0x7b, 0x3e, 0x3e,
	0x7f, 0x99, 0x95, 0x8b, 0x6f, 0x67, 0x17, 0xd1, 0x5d, 0x88, 0xd6, 0x3d, 0xe1, 0x8c, 0x2a, 0x64,
	0xea, 0x94, 0x24, 0x95, 0xe8, 0x1e, 0xdc, 0xfe, 0x2f, 0x79, 0xb7, 0x1b, 0x50, 0x21, 0x34, 0xe3,
	0xaa, 0x91, 0x6a, 0x18, 0xa9, 0x4c, 0x15, 0x86, 0x39, 0xec, 0x40, 0x52, 0xc7, 0x64, 0x31, 0xac,
	0xee, 0x8d, 0xbd, 0x06, 0xe2, 0xc2, 0x0d, 0x59, 0xb7, 0x4b, 0x9a, 0xf1, 0x08, 0xc0, 0x2c, 0xc6,
	0xf3, 0x45, 0x5a, 0x5e, 0x8e, 0xdf, 0xe1, 0x3d, 0x73, 0x1d, 0x5a, 0x99, 0xdc, 0x8a, 0x1e, 0x02,
	0xe9, 0x31, 0xc9, 0x34, 0x4f, 0x1c, 0x96, 0x96, 0x97, 0xfe, 0x7b, 0xf5, 0x57, 0x89, 0x1e, 0xc1,
	0xd1, 0x4a, 0x9d, 0x2b, 0x63, 0x83, 0xfe, 0x5f, 0x6b, 0x7d, 0xfc, 0xcb, 0x0a, 0x44, 0x3e, 0xb9,
	0xf9, 0xe5, 0xf8, 0xbc, 0xbc, 0x2a, 0xa7, 0x0b, 0x8f, 0x7d, 0x0f, 0xe1, 0x41, 0x21, 0x53, 0xd6,
	0xe5, 0x92, 0xa5, 0x2e, 0x74, 0x7f, 0x2e, 0x68, 0xc2, 0x32, 0x26, 0x2d, 0xb9, 0x85, 0xb7, 0xe6,
	0xd2, 0x19, 0xab, 0x19, 0xcd, 0xb6, 0x14, 0x95, 0xa5, 0x62, 0x89, 0x12, 0x1b, 0x85, 0x07, 0x30,
	0x2e, 0x1d, 0xd5, 0x96, 0x27, 0x82, 0x6d, 0x69, 0x6a, 0x98, 0x03, 0x2e, 0x5d, 0x97, 0x21, 0x12,
	0xaf, 0xc5, 0x75, 0x0c, 0x78, 0x57, 0x28, 0x6a, 0xb9, 0xec, 0x6d, 0xc9, 0x1b, 0xf1, 0x39, 0x1c,
	0xaf, 0x52, 0x93, 0x94, 0xd7, 0xd7, 0x63, 0xec, 0x9e, 0x6c, 0x76, 0x51, 0xe2, 0x81, 0x44, 0x65,
	0xb9, 0x60, 0xbe, 0x80, 0x55, 0x00, 0xa9, 0x80, 0xd9, 0x82, 0xd1, 0x01, 0xda, 0x59, 0x09, 0xab,
	0x78, 0xbf, 0x95, 0x30, 0x51, 0xd2, 0x72, 0x59, 0x30, 0xb3, 0x56, 0xd7, 0xe2, 0x77, 0x70, 0x90,
	0xcc, 0xa6, 0xd3, 0x72, 0x33, 0x50, 0xbc, 0x75, 0x29, 0x59, 0xe2, 0xad, 0x6f, 0x5a, 0x75, 0x0f,
	0xda, 0xcc, 0xf6, 0x99, 0x96, 0x0c, 0xaf, 0xdf, 0x86, 0xfa, 0x90, 0x77, 0x39, 0xa9, 0xe2, 0xbc,
	0x49, 0x98, 0x10, 0xeb, 0x9d, 0x35, 0x6c, 0x37, 0x2f, 0x79, 0xd2, 0x0b, 0x18, 0xe1, 0x17, 0x4f,
	0x7b, 0xa1, 0x11, 0xfd, 0xe2, 0x8b, 0x1e, 0x69, 0xc6, 0x43, 0xb8, 0xcd, 0xde, 0xbe, 0x1a, 0x4f,
	0x2f, 0xc6, 0xcf, 0x2f, 0xcb, 0x74, 0x32, 0x0f, 0x3e, 0xa0, 0x65, 0xc1, 0xba, 0xf8, 0x8d, 0x1d,
	0x68, 0x68, 0xde, 0xeb, 0x63, 0x50, 0x9b, 0x50, 0x2d, 0x72, 0x52, 0x43, 0x65, 0x8a, 0x1f, 0xa9,
	0x47, 0x0f, 0xe0, 0x78, 0x0b, 0xed, 0xb7, 0xba, 0xb8, 0x11, 0xff, 0x3f, 0x1c, 0x27, 0xb3, 0xe9,
	0xa2, 0x9c, 0x62, 0x19, 0x4d, 0xde, 0x94, 0xf3, 0x77, 0xcb, 0xd2, 0xde, 0x87, 0x9d, 0x90, 0x49,
	0x04, 0xe5, 0x0a, 0xce, 0xc5, 0x5c, 0xab, 0x9e, 0x66, 0xc6, 0x20, 0xe6, 0x56, 0xe3, 0x97, 0x3e,
	0x18, 0x78, 0xd0, 0xff, 0x7b, 0xbb, 0x40, 0x17, 0x7c, 0x4d, 0x84, 0x1b, 0xf7, 0x70, 0xce, 0x55,
	0x51, 0x98, 0x15, 0xc6, 0xcf, 0xa4, 0x43, 0xd8, 0xa5, 0x79, 0x2e, 0x38, 0x0e, 0x01, 0x85, 0x6e,
	0xb5, 0xa1, 0x8e, 0xd8, 0x4e, 0x1a, 0x1e, 0x27, 0x31, 0x5e, 0xa4, 0x89, 0x89, 0xc1, 0xd8, 0x23,
	0xe6, 0xaf, 0xa2, 0xd4, 0x8a, 0x7f, 0x00, 0x47, 0xf9, 0x7c, 0x76, 0x11, 0x46, 0xf9, 0xb3, 0xd7,
	0xe3, 0x4b, 0x84, 0x9b, 0xdb, 0x70, 0xf8, 0xac, 0xa0, 0x82, 0xdb, 0xd1, 0x56, 0xe4, 0x09, 0xec,
	0xe5, 0x5a, 0x75, 0xd1, 0x4d, 0x25, 0xa9, 0x08, 0xf0, 0x92, 0x6b, 0x65, 0x8a, 0xcc, 0xa7, 0x38,
	0x82, 0x03, 0x3f, 0x40, 0x7c, 0xf9, 0xfb, 0x31, 0x55, 0x8b, 0xbf, 0x82, 0x3d, 0x31, 0x3b, 0x1f,
	0xaf, 0xb3, 0x4a, 0x60, 0xaf, 0x97, 0x1b, 0x27, 0xd4, 0xd2, 0xd3, 0x0a, 0x86, 0x94, 0xe7, 0xa1,
	0x7d, 0xfd, 0x69, 0x1c, 0x66, 0x3c, 0xf5, 0x87, 0x4f, 0xe1, 0x70, 0x75, 0xd8, 0x94, 0xf3, 0x37,
	0x93, 0x73, 0x4f, 0x33, 0x78, 0xfe, 0x64, 0xeb, 0xf8, 0x2e, 0xb4, 0x24, 0x2b, 0x8c, 0x45, 0x24,
	0xf4, 0xd8, 0x4f, 0xcf, 0x32, 0x2e, 0x11, 0x85, 0xf7, 0x61, 0x47, 0x32, 0x4b, 0x93, 0x82, 0xdb,
	0x11, 0xa9, 0xc7, 0x3f, 0xad, 0x00, 0xa4, 0x25, 0x1a, 0xf1, 0x8e, 0x00, 0x34, 0x33, 0xd5, 0xe1,
	0x02, 0xa9, 0xca, 0x31, 0x1c, 0xe5, 0x4c, 0x1b, 0xbc, 0x94, 0xc3, 0x8a, 0x2e, 0xac, 0xbf, 0x0f,
	0x56, 0x54, 0xa8, 0x40, 0x96, 0x3a, 0x3b, 0x20, 0x35, 0xf4, 0xb1, 0xcf, 0x7b, 0x7d, 0x86, 0xa4,
	0xa6, 0xaf, 0x24, 0x0b, 0xf8, 0x6e, 0x31, 0xf5, 0x36, 0xa0, 0xe4, 0xe6, 0x40, 0xca, 0x06, 0xc8,
	0x72, 0x9a, 0xe8, 0xb2, 0x61, 0xd6, 0x59, 0x95, 0xbb, 0x8e, 0x3a, 0x23, 0xad, 0xf8, 0x2b, 0xd8,
	0x4f, 0x66, 0x57, 0xaf, 0xc6, 0xd3, 0x55, 0x50, 0x00, 0x9a, 0xc6, 0x7a, 0x76, 0xe1, 0xd3, 0x8b,
	0x7c, 0x87, 0x54, 0x83, 0xb5, 0x2c, 0xa7, 0x12, 0xeb, 0x7f, 0x49, 0x6e, 0x6a, 0x31, 0x83, 0x83,
	0x67, 0xb4, 0x97, 0x95, 0x17, 0x93, 0xb1, 0x1e, 0x2f, 0x26, 0xd3, 0x17, 0xe8, 0x14, 0x15, 0xc2,
	0x8f, 0x5f, 0x26, 0x13, 0x66, 0x48, 0x05, 0x8f, 0xb2, 0x01, 0xd3, 0x23, 0x25, 0x03, 0xf4, 0xb9,
	0xc7, 0x38, 0x3e, 0xf1, 0xca, 0xd4, 0x16, 0x1a, 0xcd, 0x7c, 0x57, 0x85, 0x5d, 0x39, 0xeb, 0x4c,
	0x2e, 0x74, 0x39, 0xbe, 0x9e, 0x4d, 0x7d, 0xf4, 0x43, 0xa2, 0x1d, 0xd3, 0x5a, 0x69, 0x72, 0x0b,
	0x6b, 0xc0, 0xb2, 0xa4, 0x2f, 0x79, 0x42, 0xc5, 0x52, 0xe8, 0x7b, 0x9b, 0xcb, 0x01, 0x15, 0x08,
	0x7c, 0xec, 0x59, 0xc1, 0x8c, 0x0d, 0x9e, 0x86, 0xa3, 0x43, 0xd6, 0x71, 0x26, 0xe7, 0x38, 0xf9,
	0x3c, 0x4f, 0x32, 0x85, 0xc9, 0x43, 0x34, 0xa4, 0x92, 0xfd, 0x22, 0xa3, 0xd2, 0x59, 0x4d, 0xbb,
	0x5d, 0x9e, 0x90, 0x7a, 0xf4, 0x11, 0xdc, 0x4f, 0x84, 0x2a, 0x52, 0x97, 0x52, 0x4b, 0x93, 0x80,
	0xc1, 0xb9, 0x56, 0x67, 0x23, 0x9e, 0x93, 0x06, 0xb6, 0x7f, 0x21, 0x4d, 0x91, 0xe7, 0x4a, 0xdf,
	0x88, 0xe6, 0x31, 0x1c, 0x75, 0x84, 0x4a, 0x4e, 0x11, 0xbc, 0x8a, 0x8e, 0xe0, 0x06, 0x4b, 0xbb,
	0xe5, 0x6b, 0x4f, 0x66, 0xd4, 0x26, 0x7d, 0x96, 0x06, 0x4c, 0x69, 0xa3, 0x5b, 0x29, 0xe5, 0x62,
	0xe4, 0xb4, 0x1f, 0xc6, 0x2e, 0xa1, 0x39, 0xd9, 0xd9, 0x48, 0x53, 0x95, 0x51, 0x2e, 0xbd, 0x14,
	0xe2, 0x7f, 0x36, 0x00, 0xc4, 0xec, 0xfa, 0x7a, 0x19, 0x8e, 0x5d, 0x68, 0x75, 0x78, 0xea, 0x86,
	0x6a, 0x49, 0x0e, 0x3c, 0x27, 0x92, 0x5b, 0x71, 0xc0, 0x3a, 0xcc, 0x72, 0xc7, 0xce, 0x72, 0xae,
	0x3d, 0x5f, 0x44, 0xc1, 0x32, 0x30, 0x1d, 0x8e, 0xe5, 0xb7, 0x15, 0xa9, 0x94, 0x51, 0xe1, 0x78,
	0x1a, 0x30, 0x76, 0x25, 0xa4, 0x45, 0x40, 0x36, 0x9e, 0x86, 0x21, 0xb4, 0x96, 0x07, 0xbf, 0x48,
	0x13, 0xbf, 0x9b, 0x71, 0x63, 0x10, 0x32, 0x33, 0xaa, 0x4f, 0x8b, 0x9c, 0xb4, 0x10, 0xee, 0x57,
	0xb2, 0x44, 0xb3, 0x40, 0xf9, 0x78, 0x4a, 0xda, 0x98, 0xc0, 0x95, 0x22, 0xd0, 0xeb, 0x9d, 0xe8,
	0x33, 0xf8, 0x74, 0x7d, 0x1e, 0x2f, 0xba, 0xda, 0x4f, 0x73, 0xec, 0x31, 0x2a, 0x7c, 0xe0, 0x09,
	0xe0, 0xc7, 0xf1, 0xb2, 0x81, 0xc6, 0x74, 0x85, 0x52, 0x9a, 0x5c, 0xe0, 0xf8, 0xd8, 0x08, 0xfd,
	0x05, 0x82, 0xc6, 0x13, 0x69, 0x81, 0x83, 0xcd, 0x77, 0x82, 0xf6, 0xb7, 0xfd, 0x06, 0x3f, 0xef,
	0x85, 0x79, 0x96, 0xfb, 0xdd, 0xe4, 0x45, 0x78, 0x00, 0x50, 0xeb, 0x96, 0xe9, 0x22, 0xdf, 0x46,
	0x1f, 0xc1, 0xbd, 0xb5, 0x13, 0x9a, 0x51, 0xb3, 0x85, 0xeb, 0xbf, 0xc6, 0x2e, 0x24, 0x6b, 0x6d,
	0xce, 0x64, 0x8a, 0xe0, 0xf8, 0x9b, 0x4a, 0xf4, 0x00, 0xee, 0xac, 0xc5, 0x29, 0x37, 0xc1, 0x79,
	0x96, 0x92, 0xdf, 0x56, 0xa2, 0x08, 0xf6, 0xd7, 0x2a, 0xc3, 0xbf, 0xcf, 0xc8, 0xef, 0xb0, 0xf4,
	0x0f, 0xd7, 0xb2, 0xae, 0xd2, 0x19, 0xb5, 0xe4, 0xf7, 0x95, 0xe8, 0x53, 0x78, 0xb8, 0xb9, 0x7e,
	0x3a, 0x60, 0xda, 0x72, 0xc4, 0x1a, 0x76, 0x96, 0x88, 0x02, 0xd1, 0x8c, 0xfc, 0xa1, 0x12, 0x7d,
	0x08, 0x77, 0xb7, 0x43, 0xb4, 0xa5, 0xfc, 0x23, 0x3e, 0x14, 0x6e, 0xaf, 0x95, 0x52, 0x59, 0x67,
	0x58, 0x82, 0x8d, 0xf4, 0xa7, 0x4a, 0xf4, 0x31, 0x7c, 0xb8, 0xd6, 0x08, 0x2a, 0x7b, 0x05, 0xed,
	0xb1, 0xad, 0xb3, 0x7f, 0xbe, 0xb9, 0x03, 0xc9, 0x64, 0x4f, 0xe9, 0xd1, 0xd6, 0x8e, 0xbf, 0x54,
	0xa2, 0x4f, 0xe0, 0xa3, 0xcd, 0xa7, 0xad, 0xd5, 0xbc, 0x53, 0xd8, 0x6d, 0x23, 0x7f, 0x45, 0x5a,
	0xf1, 0x60, 0xeb, 0x06, 0x76, 0x94, 0x6f, 0xeb, 0xff, 0x56, 0xb9, 0x11, 0x5b, 0x2a, 0x79, 0xe6,
	0xf1, 0xd1, 0x09, 0x25, 0x7b, 0xe4, 0xef, 0x95, 0xe8, 0x21, 0xdc, 0xbf, 0xe1, 0x3e, 0x15, 0x42,
	0x0d, 0xb1, 0x85, 0xb2, 0x9c, 0xfc, 0xa3, 0x12, 0x7f, 0x0f, 0xda, 0xdd, 0xb2, 0x5c, 0x3f, 0xc2,
	0xfc, 0x54, 0x71, 0x86, 0xe9, 0x41, 0x78, 0xca, 0xed, 0xc3, 0x4e, 0x47, 0x2b, 0x9a, 0x26, 0xd4,
	0xb7, 0xfb, 0x2e, 0xb4, 0x72, 0x15, 0x16, 0xb5, 0x78, 0x02, 0xf7, 0x06, 0xb3, 0xcb, 0xd7, 0x57,
	0xa5, 0x9c, 0xcd, 0xaf, 0xc6, 0x97, 0x93, 0x1f, 0x6f, 0xf8, 0x41, 0x1b, 0xea, 0x12, 0x41, 0x32,
	0xd0, 0xeb, 0x01, 0xd3, 0x18, 0x99, 0x81, 0x12, 0x45, 0xc6, 0x96, 0x53, 0x8f, 0xd1, 0xd3, 0x95,
	0xc0, 0xb3, 0x53, 0x84, 0x03, 0xc9, 0x8c, 0x09, 0x50, 0x9b, 0x14, 0xc6, 0xaa, 0x6c, 0xb5, 0xa1,
	0x1e, 0x2f, 0xa0, 0x2d, 0xc6, 0xef, 0x66, 0xaf, 0x17, 0xfc, 0x62, 0x89, 0xcd, 0x96, 0x49, 0xeb,
	0x86, 0x54, 0x2c, 0x67, 0x11, 0x66, 0xcd, 0xaf, 0xaa, 0x01, 0xfc, 0x87, 0xc6, 0xb3, 0x9c, 0x30,
	0x0b, 0x92, 0x3e, 0xb5, 0x4e, 0x70, 0x83, 0x54, 0x67, 0x0f, 0xda, 0x09, 0xd5, 0xc8, 0x0c, 0x05,
	0x69, 0xa0, 0x77, 0x2b, 0x5b, 0x61, 0x2c, 0x93, 0xa6, 0x9f, 0xb2, 0x9a, 0xa7, 0xa4, 0x15, 0xff,
	0x04, 0xda, 0xf4, 0xa2, 0x98, 0x4e, 0xf0, 0xab, 0x77, 0x80, 0xf8, 0xc7, 0x88, 0x61, 0x54, 0x27,
	0x7d, 0x57, 0x48, 0x8e, 0xfc, 0xe0, 0x01, 0x1c, 0x6b, 0x96, 0xa8, 0x2c, 0x63, 0x32, 0x0d, 0x61,
	0x1f, 0xf2, 0xb4, 0xc7, 0x96, 0xc8, 0x98, 0x6b, 0x95, 0xa9, 0xf0, 0x82, 0x30, 0xc8, 0xad, 0x02,
	0xf3, 0xe6, 0xb4, 0x83, 0xaf, 0x3b, 0x9a, 0x3a, 0xe9, 0xb3, 0x42, 0xea, 0xfe, 0x81, 0x9a, 0xa2,
	0x49, 0x9e, 0xba, 0x70, 0x75, 0xd2, 0x88, 0x9f, 0xc2, 0xee, 0x92, 0x03, 0xf8, 0xe4, 0x20, 0x71,
	0x09, 0xae, 0x92, 0x8a, 0x1f, 0x1b, 0x2a, 0xe1, 0x54, 0x2c, 0x73, 0xa2, 0x55, 0x5a, 0x24, 0x98,
	0x93, 0x9f, 0x55, 0x97, 0x04, 0xe2, 0xed, 0xc2, 0xbc, 0x7e, 0xbe, 0xc0, 0x83, 0x08, 0xb6, 0xcb,
	0x3b, 0x86, 0xf1, 0x2c, 0x90, 0x7c, 0x65, 0xf8, 0x1c, 0x0f, 0x08, 0xb0, 0xd2, 0x2e, 0x09, 0x23,
	0xd9, 0xf5, 0x19, 0x58, 0x0a, 0x03, 0xf7, 0xd8, 0xdb, 0x16, 0xf9, 0xd7, 0x1e, 0xd9, 0xdf, 0x16,
	0xf1, 0x8c, 0xf6, 0xf0, 0x3d, 0xf8, 0x01, 0xdc, 0x5d, 0x89, 0xde, 0xe3, 0x03, 0x87, 0x18, 0xeb,
	0xe0, 0xf3, 0xca, 0x0d, 0x72, 0xc7, 0x03, 0x45, 0x90, 0xb1, 0x8c, 0x72, 0x41, 0x8e, 0xb7, 0x76,
	0xf9, 0xac, 0xf1, 0x8c, 0xdc, 0x45, 0x1f, 0x97, 0x37, 0x74, 0x86, 0x09, 0x81, 0x91, 0x7c, 0x84,
	0x70, 0xb8, 0x12, 0x22, 0x44, 0x32, 0xeb, 0x89, 0x2b, 0xf9, 0x1f, 0xb4, 0xb0, 0x52, 0x68, 0x36,
	0xe0, 0x6c, 0x48, 0x3e, 0x8e, 0x25, 0xec, 0xdf, 0xe4, 0xdc, 0xbb, 0xd0, 0x5a, 0x12, 0xe1, 0x50,
	0x8f, 0xd4, 0xaa, 0x8c, 0x27, 0x21, 0xad, 0x3e, 0xa4, 0xaa, 0xb0, 0xf8, 0x60, 0x23, 0x35, 0xb4,
	0x77, 0x33, 0xc7, 0xa4, 0x8e, 0x0f, 0xca, 0xfd, 0x74, 0xbc, 0x18, 0xd3, 0xeb, 0xeb, 0x32, 0x18,
	0x44, 0x62, 0x97, 0x2b, 0x69, 0x94, 0xf6, 0x26, 0x91, 0x25, 0x32, 0x93, 0x84, 0xd1, 0xab, 0xe9,
	0x32, 0xfb, 0x3b, 0xd0, 0xc0, 0xc7, 0xa4, 0x21, 0x75, 0xff, 0x38, 0x52, 0x43, 0x29, 0x14, 0x4d,
	0x4d, 0xa0, 0x6a, 0x01, 0xbb, 0x9b, 0xde, 0x12, 0x15, 0x2c, 0x2c, 0x5b, 0x5e, 0xe3, 0x09, 0x47,
	0x1b, 0xdd, 0xa2, 0x69, 0x8a, 0x64, 0x91, 0xec, 0xa0, 0x1c, 0xbf, 0xf0, 0x84, 0x00, 0xbe, 0x75,
	0x52, 0x6e, 0xf0, 0xe1, 0x53, 0x68, 0x41, 0x76, 0x7d, 0xa9, 0x58, 0xea, 0x49, 0xe0, 0x5e, 0xfc,
	0x39, 0x1c, 0xf0, 0xab, 0xf1, 0x8b, 0x72, 0xe3, 0x6a, 0x1b, 0xea, 0x3c, 0xf1, 0x0c, 0x0a, 0x89,
	0xae, 0xea, 0x29, 0x52, 0xc5, 0x5f, 0x7e, 0xf4, 0xd4, 0xe2, 0x1f, 0xc2, 0x0e, 0x7b, 0xb3, 0x0a,
	0xd3, 0x01, 0x00, 0xcf, 0x72, 0x1d, 0x78, 0x5f, 0xe0, 0x00, 0x18, 0x51, 0x4f, 0x78, 0x33, 0x9d,
	0xb8, 0x2f, 0x4f, 0x42, 0xa5, 0xdf, 0x10, 0x3e, 0x3e, 0x39, 0x09, 0x4f, 0x8d, 0xb5, 0x34, 0x3c,
	0x6a, 0xbe, 0x3c, 0x21, 0xf5, 0xf8, 0x33, 0xb8, 0x1d, 0xcc, 0xcf, 0xc7, 0xe7, 0x2f, 0x27, 0xd3,
	0x17, 0x4b, 0x5e, 0xdc, 0x82, 0x1a, 0xcf, 0x7a, 0x81, 0x13, 0x7e, 0x6d, 0x48, 0xf5, 0x3f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x18, 0xa6, 0x7c, 0xf0, 0x7f, 0x12, 0x00, 0x00,
}
